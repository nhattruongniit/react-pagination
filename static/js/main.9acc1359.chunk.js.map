{"version":3,"sources":["reducers.js","components/Pagination.js","components/TableView.js","components/GridView.js","actions.js","components/Options.js","App.js","index.js"],"names":["initialState","typeView","posts","totalItems","metadata","page","pageSize","reducers","state","type","payload","Paging","onChangePagination","PagingStyled","Pagination","pageSizes","onChange","value","styled","div","TableContainer","DataTable","Table","TableHead","TableRow","TableBody","TableCell","TableHeader","headers","key","header","TableView","rows","render","getHeaderProps","map","row","id","cells","cell","GridView","title","body","CardStyled","BoxStyled","TitleStyled","request","axios","create","baseURL","actSetPagination","mapDispatchToProps","changeTypeView","connect","OptionStyled","RadioStyled","RadioButton","defaultChecked","name","labelText","fetchPosts","dispatch","a","get","res","data","setPagination","useEffect","ContainerStyled","GridStyled","post","store","createStore","appReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9acc1359.chunk.js","sourcesContent":["export const SET_TYPE_VIEW = \"SET_TYPE_VIEW\";\nexport const FETCH_POSTS_SUCCESS = \"FETCH_POSTS_SUCCESS\";\nexport const SET_PAGINATION = \"SET_PAGINATION\";\n\nconst initialState = {\n  typeView: \"grid-view\",\n  posts: [],\n  totalItems: 100,\n  metadata: {\n    page: 1,\n    pageSize: 10\n  }\n};\n\nconst reducers = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case SET_TYPE_VIEW:\n      return {\n        ...state,\n        typeView: payload.typeView\n      };\n    case FETCH_POSTS_SUCCESS:\n      return {\n        ...state,\n        posts: payload.posts\n      };\n\n    case SET_PAGINATION:\n      return {\n        ...state,\n        metadata: payload.metadata\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducers;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Pagination from \"carbon-components-react/es/components/Pagination\";\n\nconst Paging = ({ totalItems, onChangePagination }) => {\n  return (\n    <PagingStyled>\n      <Pagination\n        page={1}\n        totalItems={totalItems}\n        pageSize={1}\n        pageSizes={[10, 20]}\n        onChange={value => onChangePagination(value)}\n      />\n    </PagingStyled>\n  );\n};\n\nexport default Paging;\n\nconst PagingStyled = styled.div`\n  margin-top: 30px;\n`;\n","import React from \"react\";\n\nimport { DataTable } from \"carbon-components-react\";\nconst {\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableBody,\n  TableCell,\n  TableHeader\n} = DataTable;\n\n// We would have a headers array like the following\nconst headers = [\n  {\n    // `key` is the name of the field on the row object itself for the header\n    key: \"id\",\n    // `header` will be the name you want rendered in the Table Header\n    header: \"Id\"\n  },\n  {\n    key: \"title\",\n    header: \"Title\"\n  },\n  {\n    key: \"body\",\n    header: \"Body\"\n  }\n];\n\nconst TableView = ({ posts }) => {\n  return (\n    <>\n      <h4>Table View</h4>\n      <DataTable\n        rows={posts}\n        headers={headers}\n        render={({ rows, headers, getHeaderProps }) => (\n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  {headers.map(header => (\n                    <TableHeader {...getHeaderProps({ header })}>\n                      {header.header}\n                    </TableHeader>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rows.map(row => (\n                  <TableRow key={row.id}>\n                    {row.cells.map(cell => (\n                      <TableCell key={cell.id}>{cell.value}</TableCell>\n                    ))}\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        )}\n      />\n    </>\n  );\n};\n\nexport default TableView;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst GridView = ({ id, title, body }) => {\n  return (\n    <>\n      <CardStyled>\n        <BoxStyled>\n          <TitleStyled>\n            <b>ID:</b> {id}\n          </TitleStyled>\n          <TitleStyled>\n            <b>Title:</b> {title}\n          </TitleStyled>\n          <TitleStyled>\n            <b>Body:</b> {body}\n          </TitleStyled>\n        </BoxStyled>\n      </CardStyled>\n    </>\n  );\n};\n\nexport default GridView;\n\nconst BoxStyled = styled.div`\n  padding: 5px 10px;\n`;\n\nconst CardStyled = styled.div`\n  position: relative;\n  border: 1px solid #525151;\n  width: 30%;\n  &:hover button {\n    display: block;\n  }\n`;\n\nconst TitleStyled = styled.div`\n  text-transform: capitalize;\n\n  b {\n    font-weight: bold;\n  }\n`;\n","import axios from \"axios\";\nimport { SET_TYPE_VIEW, FETCH_POSTS_SUCCESS, SET_PAGINATION } from \"./reducers\";\n\nconst request = axios.create({\n  baseURL: \"http://localhost:8888\"\n});\n\n// dispatch type\nexport const changeTypeView = typeView => ({\n  type: SET_TYPE_VIEW,\n  payload: { typeView }\n});\n\nexport const actSetPagination = metadata => ({\n  type: SET_PAGINATION,\n  payload: { metadata }\n});\n\nconst actFetchPostSuccess = posts => ({\n  type: FETCH_POSTS_SUCCESS,\n  payload: { posts }\n});\n\n// action creator\nexport const fetchPosts = (page, pageSize) => async dispatch => {\n  const res = await request.get(`/posts?_page=${page}&_limit=${pageSize}`);\n  dispatch(actFetchPostSuccess(res.data));\n};\n\nexport const setPagination = metadata => async dispatch => {\n  dispatch(actSetPagination(metadata));\n};\n\n// action pagination\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { RadioButton } from \"carbon-components-react\";\n\n// action\nimport { changeTypeView } from \"../actions\";\n\nfunction Options({ changeTypeView }) {\n  return (\n    <OptionStyled>\n      <h4>Select Options:</h4>\n      <RadioStyled>\n        <RadioButton\n          defaultChecked\n          name=\"view\"\n          value=\"grid-view\"\n          labelText=\"Grid View\"\n          onChange={value => changeTypeView(value)}\n        />\n        <RadioButton\n          name=\"view\"\n          value=\"table-view\"\n          labelText=\"Table View\"\n          onChange={value => changeTypeView(value)}\n        />\n      </RadioStyled>\n    </OptionStyled>\n  );\n}\n\nconst mapDispatchToProps = {\n  changeTypeView\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Options);\n\nconst OptionStyled = styled.div`\n  margin-bottom: 30px;\n`;\n\nconst RadioStyled = styled.div`\n  display: flex;\n`;\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\n\nimport Paging from \"./components/Pagination\";\nimport TableView from \"./components/TableView\";\nimport GridView from \"./components/GridView\";\nimport Options from \"./components/Options\";\n\n//css\nimport \"carbon-components/css/carbon-components.min.css\";\n\n// actions\nimport { fetchPosts, setPagination } from \"./actions\";\n\nfunction App({\n  typeView,\n  posts,\n  page,\n  pageSize,\n  totalItems,\n  fetchPosts,\n  setPagination\n}) {\n  useEffect(() => {\n    fetchPosts(page, pageSize);\n  }, []);\n\n  const _onChangePagination = value => {\n    setPagination(value);\n    fetchPosts(value.page, value.pageSize);\n  };\n\n  return (\n    <>\n      <Options />\n      {typeView === \"grid-view\" && (\n        <>\n          <h4>Grid View</h4>\n          <ContainerStyled>\n            <GridStyled>\n              {posts.map(post => (\n                <GridView\n                  key={post.id}\n                  id={post.id}\n                  title={post.title}\n                  body={post.body}\n                />\n              ))}\n            </GridStyled>\n          </ContainerStyled>\n        </>\n      )}\n      {typeView === \"table-view\" && <TableView posts={posts} />}\n      <Paging\n        page={page}\n        pageSize={pageSize}\n        totalItems={totalItems}\n        onChangePagination={_onChangePagination}\n      />\n    </>\n  );\n}\n\nconst mapStateToProps = state => {\n  const {\n    typeView,\n    posts,\n    totalItems,\n    metadata: { page, pageSize }\n  } = state;\n  return {\n    typeView,\n    posts,\n    page,\n    pageSize,\n    totalItems\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchPosts,\n  setPagination\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n\nconst ContainerStyled = styled.div`\n  margin: 0 auto;\n`;\n\nconst GridStyled = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: flex-start;\n  > * {\n    flex: 0 0 32%;\n    margin: 1% 0;\n  }\n  > :nth-child(3n-1) {\n    margin-left: 2%;\n    margin-right: 2%;\n  }\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// redux\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\n\n// reducers\nimport appReducer from \"./reducers\";\n\n// css\nimport \"./index.css\";\n\n//component\nimport App from \"./App\";\n\nconst store = createStore(\n  appReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}